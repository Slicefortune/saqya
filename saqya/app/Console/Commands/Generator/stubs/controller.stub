<?php

namespace App\Http\Controllers\Admin;

use App\DataTables\{{ modelName }}DataTable;
use App\Http\Controllers\Controller;
use App\Http\Requests\{{ modelName }}Request;
use App\Services\{{ modelName }}Service;
use Illuminate\Http\JsonResponse;

class {{ controllerName }} extends Controller
{
     /**
        * @var {{ modelName }}Service $service
        */
       protected {{ modelName }}Service $service;

       public function __construct({{ modelName }}Service $service)
       {
           $this->service = $service;
       }

       /**
        * Display a listing of the resource.
        * @param {{ modelName }}DataTable $dataTable
        * @return mixed
        */
       public function index({{ modelName }}DataTable $dataTable): mixed
       {
           return $dataTable->render('admin.{{ viewDir }}.index');
       }

       /**
        * Show the form for creating a new resource.
        * @return JsonResponse|void
        */
       public function create()
       {
           if (request()->ajax()) {
               return $this->returnSuccessJsonResponse(data: [
                   'html' => view('admin.{{ viewDir }}.form')
                       ->with('title', "Create New {{ modelName }}")
                       ->with('actionRoute', route('admin.{{ routePrefix }}s.store'))
                       ->with('actionMethod', 'POST')
                       ->render()
               ]);
           }
           abort(404);
       }

       /**
        * Store a newly created resource in storage.
        * @param {{ modelName }}Request $request
        * @return JsonResponse|void
        */
       public function store({{ modelName }}Request $request)
       {
           if (request()->ajax()) {
               $validateData = $request->validated();
               $this->service->create($validateData);
               return $this->returnSuccessJsonResponse('New Record Created Successfully');
           }
           abort(404);
       }

       /**
        * Display the specified resource.
        */
       public function show(string $id): void
       {
           //
       }

       /**
        * Show the form for editing the specified resource.
        */
       public function edit(string $id)
       {
           if (request()->ajax()) {
               $item = $this->service->findOrFail($id);
               return $this->returnSuccessJsonResponse(data: [
                   'html' => view('admin.{{ viewDir }}.form')
                       ->with('title', "Edit {{ modelName }}")
                       ->with('item', $item)
                       ->with('actionRoute', route('admin.{{ routePrefix }}s.update', $item->id))
                       ->with('actionMethod', 'PATCH')
                       ->render()
               ]);
           }
           abort(404);
       }

       /**
        * @param {{ modelName }}Request $request
        * @param string $id
        * @return JsonResponse|void
        */
       public function update({{ modelName }}Request $request, string $id)
       {
           if (request()->ajax()) {
               $validateData = $request->validated();
               $this->service->update($id, $validateData);
               return $this->returnSuccessJsonResponse('Record Updated Successfully');
           }
           abort(404);
       }

       /**
        * Remove the specified resource from storage.
        */
       public function destroy(string $id)
       {
           if (request()->ajax()) {
               $this->service->delete($id);
               return $this->returnSuccessJsonResponse('Record Updated Successfully');
           }
           abort(404);
       }
}
